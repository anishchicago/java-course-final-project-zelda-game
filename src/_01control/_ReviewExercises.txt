#########################################################################
# Use this file to answer Review Exercises from the Big Java textbook
#########################################################################

R1.5 The following are all benefits to using Java over machine code:
1/ Java bytecode is platform independent and may be run on any system that has a JVM. This quality is known as portability.
2/ Java JIT compilers can run efficient Java programs as fast or faster than machine code programs
3/ Java is memory-managed. This reduces about 95% of runtime errors (mostly memory-related) as compared to unmanaged code.
4/ Java was designed for networking and the Internet in mind; and it is generally safer than machine code


R2.3 Translating math expressions to Java.  See R2.4 for inspiration.

a) s = s0 + v0 * t + 0.5 * g * t * t
b) 4 * Math.pow(Math.PI, 2) * Math.pow(a, 3) / (p * p * (m1 + m2))
c) fv = pv * Math.pow(1 + int/100, yrs)
d) c = Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(gamma))

R2.6 Order of precedence, and integer division.

a) 8
b) 1
c) 17
d) 17.5
e) 17
f) 18

R2.10 Formatting. Hint: DecimalFormat object.

The programmer asked to display the variable 'change' exactly, but the binary system
doesn't have an exact representation of 0.07.

Since the change is in cents, the programmer could use:

String pattern = "#,###.##";
DecimalFormat decimalFormat = new DecimalFormat(pattern);
System.out.println(decimalFormat.format(change));

R2.11 Types expressed in code

2 is an integer, 2.0 is a double, '2' is a character, "2" is a string, "2.0" is a string

R2.15 Math library and the modulus (%) operator

// denote the inputted number by the variable 'inputNumber'

power = Math.log10(inputNumber) // actual power
intPower = convert power to integer
print inputNumber % intPower // first digit
print inputNumber % 10 // last digit

R3.18 Pseudocode

if score is not an integer:
    raise an error

if score > 100 or score < 0:
    raise an error

if score <= 100 and score >= 90
    grade = 'A'
else if score <= 89 and score >= 80
    grade = 'B'
else if score <= 79 and score >= 70
    grade = 'C'
else if score <= 69 and score >= 60
    grade = 'D'
else
    grade = 'F'

print grade to console

R4.9 Types of loops
R4.12 Pseudocode
R4.15 for/while
